{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPRevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponentesHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultado","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n\r\n    const horas = document.querySelector('#horas');\r\n    \r\n    if (horas)  {\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria_id =  document.querySelector('[name= \"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name= \"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]')\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]')\r\n\r\n        categoria_id.addEventListener('change', terminoBusqueda)\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reinicio los casmpos ocultos y el select de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n           \r\n            const horaPRevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPRevia) {\r\n                horaPRevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        } \r\n\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // comprobar eventos ya tomados, y quitar la clase de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n \r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Desabilitar la hora previa, si hay un nuievo click\r\n            const horaPRevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPRevia) {\r\n                horaPRevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llena el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n\r\n   \r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes')\r\n        const ponentesHidden = document.querySelector('[name=\"ponente_id\"]')\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() { \r\n            \r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        // Formater ponentes\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                } \r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, 'i');\r\n                ponentesFiltrados = ponentes.filter( ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    } \r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            \r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n           \r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            }\r\n\r\n            if(ponentesFiltrados.length >0 ) {\r\n                \r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // AÃ±adir al dom\r\n                    listadoPonentes.appendChild(ponenteHTML)\r\n    \r\n                })\r\n            } else {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-ponentes__no-resultado')\r\n                noResultado.textContent = 'No hay resultados para tu busqueda ';\r\n                listadoPonentes.appendChild(noResultado)\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponentesHidden.value = ponente.dataset.ponenteId;\r\n            \r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();","//IFEE\r\n(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim() ]\r\n                tagsInput.value = '';\r\n                console.log(tags);\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags()  {\r\n            \r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('Formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n                e.target.remove();\r\n                tags = tags.filter(tag => tag !== e.target.textContent);\r\n                actualizarInputHidden();\r\n           }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n\r\n           \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n})();"]}